{
  "version": 3,
  "sources": ["../../../../node_modules/@vuepress/theme-default/lib/client/composables/useSidebarItems.js"],
  "sourcesContent": ["import { useThemeLocaleData } from '@theme/useThemeData';\nimport { keys, startsWith } from '@vuepress/helper/client';\nimport { computed, inject, provide } from 'vue';\nimport { usePageData, usePageFrontmatter, useRoute, useRouteLocale, } from 'vuepress/client';\nimport { isPlainObject, isString } from 'vuepress/shared';\nimport { getAutoLink, isLinkInternal, resolvePrefix } from '../utils/index.js';\nexport const sidebarItemsSymbol = Symbol('sidebarItems');\n/**\n * Inject sidebar items global computed\n */\nexport const useSidebarItems = () => {\n    const sidebarItems = inject(sidebarItemsSymbol);\n    if (!sidebarItems) {\n        throw new Error('useSidebarItems() is called without provider.');\n    }\n    return sidebarItems;\n};\n/**\n * Create sidebar items ref and provide as global computed in setup\n */\nexport const setupSidebarItems = () => {\n    const themeLocale = useThemeLocaleData();\n    const frontmatter = usePageFrontmatter();\n    const page = usePageData();\n    const route = useRoute();\n    const routeLocale = useRouteLocale();\n    const sidebarConfig = computed(() => frontmatter.value.home\n        ? false\n        : frontmatter.value.sidebar ?? themeLocale.value.sidebar ?? 'heading');\n    const sidebarDepth = computed(() => frontmatter.value.sidebarDepth ?? themeLocale.value.sidebarDepth ?? 2);\n    const sidebarItems = computed(() => resolveSidebarItems(sidebarConfig.value, sidebarDepth.value, page.value, route.path, routeLocale.value));\n    provide(sidebarItemsSymbol, sidebarItems);\n};\n/**\n * Resolve sidebar items global computed\n *\n * It should only be resolved and provided once\n */\nexport const resolveSidebarItems = (sidebarConfig, sidebarDepth, page, path, routeLocale) => {\n    // resolve sidebar items according to the config\n    if (sidebarConfig === false) {\n        return [];\n    }\n    if (sidebarConfig === 'heading') {\n        return resolveSidebarHeadingItem(sidebarDepth, page);\n    }\n    if (Array.isArray(sidebarConfig)) {\n        return resolveArraySidebarItems(sidebarConfig, sidebarDepth, page, path, routeLocale);\n    }\n    if (isPlainObject(sidebarConfig)) {\n        return resolveMultiSidebarItems(sidebarConfig, sidebarDepth, page, path);\n    }\n    return [];\n};\n/**\n * Util to transform page header to sidebar item\n */\nexport const resolveSidebarHeaderItem = (sidebarDepth, header) => ({\n    text: header.title,\n    link: header.link,\n    children: resolveSidebarHeaderItems(sidebarDepth, header.children),\n});\nexport const resolveSidebarHeaderItems = (sidebarDepth, headers) => sidebarDepth > 0\n    ? headers.map((header) => resolveSidebarHeaderItem(sidebarDepth - 1, header))\n    : [];\n/**\n * Resolve current page and its header to sidebar items if the config is `heading`\n */\nexport const resolveSidebarHeadingItem = (sidebarDepth, page) => [\n    {\n        text: page.title,\n        children: resolveSidebarHeaderItems(sidebarDepth, page.headers),\n    },\n];\n/**\n * Resolve sidebar items if the config is an array\n */\nexport const resolveArraySidebarItems = (sidebarConfig, sidebarDepth, page, path, prefix = '') => {\n    const handleChildItem = (item, pathPrefix) => {\n        const childItem = isString(item)\n            ? getAutoLink(resolvePrefix(pathPrefix, item))\n            : isString(item.link)\n                ? {\n                    ...item,\n                    link: isLinkInternal(item.link)\n                        ? getAutoLink(resolvePrefix(pathPrefix, item.link)).link\n                        : item.link,\n                }\n                : item;\n        if ('children' in childItem) {\n            return {\n                ...childItem,\n                children: childItem.children.map((item) => handleChildItem(item, resolvePrefix(pathPrefix, childItem.prefix))),\n            };\n        }\n        // if the sidebar item is current page and children is not set\n        // use headers of current page as children\n        if (childItem.link === path) {\n            // skip h1 header\n            const headers = page.headers[0]?.level === 1 ? page.headers[0].children : page.headers;\n            return {\n                ...childItem,\n                children: resolveSidebarHeaderItems(sidebarDepth, headers),\n            };\n        }\n        return childItem;\n    };\n    return sidebarConfig.map((item) => handleChildItem(item, prefix));\n};\n/**\n * Resolve sidebar items if the config is a key -> value (path-prefix -> array) object\n */\nexport const resolveMultiSidebarItems = (sidebarConfig, sidebarDepth, page, path) => {\n    const sidebarRoutes = keys(sidebarConfig).sort((x, y) => y.length - x.length);\n    // Find matching config\n    for (const base of sidebarRoutes)\n        if (startsWith(decodeURI(path), base)) {\n            const matched = sidebarConfig[base];\n            return matched\n                ? matched === 'heading'\n                    ? resolveSidebarHeadingItem(sidebarDepth, page)\n                    : resolveArraySidebarItems(matched, sidebarDepth, page, path, base)\n                : [];\n        }\n    console.warn(`${decodeURI(path)} is missing sidebar config.`);\n    return [];\n};\n"],
  "mappings": "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",
  "names": ["item"]
}
