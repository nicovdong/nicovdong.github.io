{
  "version": 3,
  "sources": ["../../../../node_modules/@vuepress/theme-default/lib/client/composables/useDarkMode.js"],
  "sourcesContent": ["import { useThemeLocaleData } from '@theme/useThemeData';\nimport { usePreferredDark, useStorage } from '@vueuse/core';\nimport { computed, inject, onMounted, onUnmounted, provide, watch } from 'vue';\nexport const darkModeSymbol = Symbol(__VUEPRESS_DEV__ ? 'darkMode' : '');\n/**\n * Inject dark mode global computed\n */\nexport const useDarkMode = () => {\n    const isDarkMode = inject(darkModeSymbol);\n    if (!isDarkMode) {\n        throw new Error('useDarkMode() is called without provider.');\n    }\n    return isDarkMode;\n};\n/**\n * Create dark mode ref and provide as global computed in setup\n */\nexport const setupDarkMode = () => {\n    const themeLocale = useThemeLocaleData();\n    const isDarkPreferred = usePreferredDark();\n    const darkStorage = useStorage('vuepress-color-scheme', themeLocale.value.colorMode);\n    const isDarkMode = computed({\n        get() {\n            // disable color mode switching\n            if (!themeLocale.value.colorModeSwitch) {\n                return themeLocale.value.colorMode === 'dark';\n            }\n            // auto detected from prefers-color-scheme\n            if (darkStorage.value === 'auto') {\n                return isDarkPreferred.value;\n            }\n            // storage value\n            return darkStorage.value === 'dark';\n        },\n        set(val) {\n            if (val === isDarkPreferred.value) {\n                darkStorage.value = 'auto';\n            }\n            else {\n                darkStorage.value = val ? 'dark' : 'light';\n            }\n        },\n    });\n    provide(darkModeSymbol, isDarkMode);\n    updateHtmlDarkClass(isDarkMode);\n};\nexport const updateHtmlDarkClass = (isDarkMode) => {\n    const update = (value = isDarkMode.value) => {\n        // set `class=\"dark\"` on `<html>` element\n        const htmlEl = window?.document.querySelector('html');\n        htmlEl?.classList.toggle('dark', value);\n    };\n    onMounted(() => {\n        watch(isDarkMode, update, { immediate: true });\n    });\n    onUnmounted(() => update());\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAGO,IAAM,iBAAiB,OAAO,mBAAmB,aAAa,EAAE;AAIhE,IAAM,cAAc,MAAM;AAC7B,QAAM,aAAa,OAAO,cAAc;AACxC,MAAI,CAAC,YAAY;AACb,UAAM,IAAI,MAAM,2CAA2C;AAAA,EAC/D;AACA,SAAO;AACX;AAIO,IAAM,gBAAgB,MAAM;AAC/B,QAAM,cAAc,mBAAmB;AACvC,QAAM,kBAAkB,iBAAiB;AACzC,QAAM,cAAc,WAAW,yBAAyB,YAAY,MAAM,SAAS;AACnF,QAAM,aAAa,SAAS;AAAA,IACxB,MAAM;AAEF,UAAI,CAAC,YAAY,MAAM,iBAAiB;AACpC,eAAO,YAAY,MAAM,cAAc;AAAA,MAC3C;AAEA,UAAI,YAAY,UAAU,QAAQ;AAC9B,eAAO,gBAAgB;AAAA,MAC3B;AAEA,aAAO,YAAY,UAAU;AAAA,IACjC;AAAA,IACA,IAAI,KAAK;AACL,UAAI,QAAQ,gBAAgB,OAAO;AAC/B,oBAAY,QAAQ;AAAA,MACxB,OACK;AACD,oBAAY,QAAQ,MAAM,SAAS;AAAA,MACvC;AAAA,IACJ;AAAA,EACJ,CAAC;AACD,UAAQ,gBAAgB,UAAU;AAClC,sBAAoB,UAAU;AAClC;AACO,IAAM,sBAAsB,CAAC,eAAe;AAC/C,QAAM,SAAS,CAAC,QAAQ,WAAW,UAAU;AAEzC,UAAM,SAAS,iCAAQ,SAAS,cAAc;AAC9C,qCAAQ,UAAU,OAAO,QAAQ;AAAA,EACrC;AACA,YAAU,MAAM;AACZ,UAAM,YAAY,QAAQ,EAAE,WAAW,KAAK,CAAC;AAAA,EACjD,CAAC;AACD,cAAY,MAAM,OAAO,CAAC;AAC9B;",
  "names": []
}
