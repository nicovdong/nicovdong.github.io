{
  "version": 3,
  "sources": ["../../../../node_modules/@vuepress/theme-default/lib/client/composables/useNavbarSelectLanguage.js"],
  "sourcesContent": ["import { useThemeData, useThemeLocaleData } from '@theme/useThemeData';\nimport { useRoutePaths } from '@vuepress/helper/client';\nimport { computed } from 'vue';\nimport { useRoute, useRouteLocale, useSiteData, useSiteLocaleData, } from 'vuepress/client';\n/**\n * Get navbar config of select language dropdown\n */\nexport const useNavbarSelectLanguage = () => {\n    const route = useRoute();\n    const routePaths = useRoutePaths();\n    const routeLocale = useRouteLocale();\n    const site = useSiteData();\n    const siteLocale = useSiteLocaleData();\n    const theme = useThemeData();\n    const themeLocale = useThemeLocaleData();\n    return computed(() => {\n        const localePaths = Object.keys(site.value.locales);\n        // do not display language selection dropdown if there is only one language\n        if (localePaths.length < 2) {\n            return [];\n        }\n        const currentPath = route.path;\n        const currentFullPath = route.fullPath;\n        const languageDropdown = {\n            text: `${themeLocale.value.selectLanguageText}`,\n            ariaLabel: `${themeLocale.value.selectLanguageAriaLabel ??\n                themeLocale.value.selectLanguageText}`,\n            children: localePaths.map((targetLocalePath) => {\n                // target locale config of this language link\n                const targetSiteLocale = site.value.locales?.[targetLocalePath] ?? {};\n                const targetThemeLocale = theme.value.locales?.[targetLocalePath] ?? {};\n                const targetLang = `${targetSiteLocale.lang}`;\n                const text = targetThemeLocale.selectLanguageName ?? targetLang;\n                // if the target language is current language\n                // stay at current link\n                if (targetLang === siteLocale.value.lang) {\n                    return {\n                        text,\n                        activeMatch: '.',\n                        link: route.fullPath,\n                    };\n                }\n                // if the target language is not current language\n                // try to link to the corresponding page of current page\n                // or fallback to homepage\n                const targetLocalePage = currentPath.replace(routeLocale.value, targetLocalePath);\n                return {\n                    text,\n                    // try to keep current hash and params across languages\n                    link: routePaths.value.some((item) => item === targetLocalePage)\n                        ? currentFullPath.replace(currentPath, targetLocalePage)\n                        : targetThemeLocale.home ?? targetLocalePath,\n                };\n            }),\n        };\n        return [languageDropdown];\n    });\n};\n"],
  "mappings": ";;;;;;;;;;;;AAGA,SAAS,UAAU,gBAAgB,aAAa,yBAA0B;AAInE,IAAM,0BAA0B,MAAM;AACzC,QAAM,QAAQ,SAAS;AACvB,QAAM,aAAa,cAAc;AACjC,QAAM,cAAc,eAAe;AACnC,QAAM,OAAO,YAAY;AACzB,QAAM,aAAa,kBAAkB;AACrC,QAAM,QAAQ,aAAa;AAC3B,QAAM,cAAc,mBAAmB;AACvC,SAAO,SAAS,MAAM;AAClB,UAAM,cAAc,OAAO,KAAK,KAAK,MAAM,OAAO;AAElD,QAAI,YAAY,SAAS,GAAG;AACxB,aAAO,CAAC;AAAA,IACZ;AACA,UAAM,cAAc,MAAM;AAC1B,UAAM,kBAAkB,MAAM;AAC9B,UAAM,mBAAmB;AAAA,MACrB,MAAM,GAAG,YAAY,MAAM,kBAAkB;AAAA,MAC7C,WAAW,GAAG,YAAY,MAAM,2BAC5B,YAAY,MAAM,kBAAkB;AAAA,MACxC,UAAU,YAAY,IAAI,CAAC,qBAAqB;AA3B5D;AA6BgB,cAAM,qBAAmB,UAAK,MAAM,YAAX,mBAAqB,sBAAqB,CAAC;AACpE,cAAM,sBAAoB,WAAM,MAAM,YAAZ,mBAAsB,sBAAqB,CAAC;AACtE,cAAM,aAAa,GAAG,iBAAiB,IAAI;AAC3C,cAAM,OAAO,kBAAkB,sBAAsB;AAGrD,YAAI,eAAe,WAAW,MAAM,MAAM;AACtC,iBAAO;AAAA,YACH;AAAA,YACA,aAAa;AAAA,YACb,MAAM,MAAM;AAAA,UAChB;AAAA,QACJ;AAIA,cAAM,mBAAmB,YAAY,QAAQ,YAAY,OAAO,gBAAgB;AAChF,eAAO;AAAA,UACH;AAAA;AAAA,UAEA,MAAM,WAAW,MAAM,KAAK,CAAC,SAAS,SAAS,gBAAgB,IACzD,gBAAgB,QAAQ,aAAa,gBAAgB,IACrD,kBAAkB,QAAQ;AAAA,QACpC;AAAA,MACJ,CAAC;AAAA,IACL;AACA,WAAO,CAAC,gBAAgB;AAAA,EAC5B,CAAC;AACL;",
  "names": []
}
